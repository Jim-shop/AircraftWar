@startuml

abstract class AbstractPropFactory {
    # speedX: float
    # speedY: float
    + {abstract} createProp(float locationX, float locationY): AbstractProp
}

class BloodPropFactory extends AbstractPropFactory {
    + createProp(float locationX, float locationY): BloodProp
}

class BombPropFactory extends AbstractPropFactory {
    + createProp(float locationX, float locationY): BombProp
}

class BulletPropFactory extends AbstractPropFactory {
    + createProp(float locationX, float locationY): BulletProp
}

class RandomPropFactory extends AbstractPropFactory {
    + createProp(float locationX, float locationY): AbstractProp
}

RandomPropFactory --> BloodPropFactory
RandomPropFactory --> BombPropFactory
RandomPropFactory --> BulletPropFactory

BloodPropFactory ..> BloodProp
BombPropFactory ..> BombProp
BulletPropFactory ..> BulletProp
RandomPropFactory ..> AbstractProp

EliteEnemy -> RandomPropFactory
BossEnemy -> RandomPropFactory

@enduml